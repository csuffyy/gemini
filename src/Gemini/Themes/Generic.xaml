<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Gemini.Framework.Controls"
                    xmlns:editing="clr-namespace:ICSharpCode.AvalonEdit.Editing"
                    xmlns:graphEditor="clr-namespace:Gemini.Modules.GraphEditor.Controls">

    <!--  Code Editor  -->
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/ICSharpCode.AvalonEdit;component/TextEditor.xaml" />
		<ResourceDictionary Source="/ICSharpCode.AvalonEdit;component/Search/DropDownButton.xaml" />
		<ResourceDictionary Source="/ICSharpCode.AvalonEdit;component/Search/SearchPanel.xaml" />
		<ResourceDictionary Source="/ICSharpCode.AvalonEdit;component/CodeCompletion/CompletionList.xaml" />
		<ResourceDictionary Source="/ICSharpCode.AvalonEdit;component/CodeCompletion/InsightWindow.xaml" />-->

        <ResourceDictionary Source="/Gemini;component/Modules/CodeEditor/ICSharpCode.AvalonEdit/TextEditor.xaml" />
        <ResourceDictionary Source="/Gemini;component/Modules/CodeEditor/ICSharpCode.AvalonEdit/Search/DropDownButton.xaml" />
        <ResourceDictionary Source="/Gemini;component/Modules/CodeEditor/ICSharpCode.AvalonEdit/Search/SearchPanel.xaml" />
        <ResourceDictionary Source="/Gemini;component/Modules/CodeEditor/ICSharpCode.AvalonEdit/CodeCompletion/CompletionList.xaml" />
        <ResourceDictionary Source="/Gemini;component/Modules/CodeEditor/ICSharpCode.AvalonEdit/CodeCompletion/InsightWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type editing:LineNumberMargin}">
        <!--<Setter Property="Control.Cursor" Value="/ICSharpCode.AvalonEdit;component/themes/RightArrow.cur" />-->
        <!--<Setter Property="Cursor" Value="/Gemini;component/Resources/RightArrow.cur" />-->
        <Setter Property="Cursor" Value="/Gemini;component/Resources/RightArrow.cur" />
    </Style>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border Background="{StaticResource {x:Static SystemColors.ControlLightBrushKey}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" CornerRadius="2,0,0,0">
                    <Path Name="Arrow"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 8 L 4 4 Z"
                          Fill="{StaticResource GlyphBrush}" />
                </Border>
                <ContentPresenter Grid.Column="1"
                                  Margin="4"
                                  ContentSource="Content"
                                  RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="controls:ExpanderEx">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ExpanderEx">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>

                        <ToggleButton Grid.Row="0"
                                      Content="{TemplateBinding Header}"
                                      IsChecked="{Binding IsExpanded,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      OverridesDefaultStyle="True"
                                      Template="{StaticResource ExpanderToggleButton}" />

                        <Border Name="Content" Grid.Row="1">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  GraphEditor  -->
    <Style TargetType="graphEditor:ElementItem">
        <Setter Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
        <Setter Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
        <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="graphEditor:ElementItem">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="graphEditor:GraphControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="graphEditor:GraphControl">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border>
                            <Border.Background>
                                <VisualBrush TileMode="Tile"
                                             Viewbox="0,0,25,25"
                                             ViewboxUnits="Absolute"
                                             Viewport="0,0,25,25"
                                             ViewportUnits="Absolute">
                                    <VisualBrush.Visual>
                                        <Border Width="25"
                                                Height="25"
                                                BorderThickness="0 0 1 1">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="#77A9A9A9" />
                                            </Border.BorderBrush>
                                        </Border>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                            <Grid>
                                <ItemsControl ItemContainerStyle="{TemplateBinding ConnectionItemContainerStyle}"
                                              ItemTemplate="{TemplateBinding ConnectionItemTemplate}"
                                              ItemTemplateSelector="{TemplateBinding ConnectionItemDataTemplateSelector}"
                                              ItemsSource="{TemplateBinding ConnectionsSource}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <graphEditor:ElementItemsControl x:Name="PART_ElementItemsControl"
                                                                 ItemContainerStyle="{TemplateBinding ElementItemContainerStyle}"
                                                                 ItemTemplate="{TemplateBinding ElementItemTemplate}"
                                                                 ItemTemplateSelector="{TemplateBinding ElementItemDataTemplateSelector}"
                                                                 ItemsSource="{TemplateBinding ElementsSource}">
                                    <ListBox.Template>
                                        <ControlTemplate TargetType="ListBox">
                                            <Canvas IsItemsHost="True" />
                                        </ControlTemplate>
                                    </ListBox.Template>
                                </graphEditor:ElementItemsControl>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type graphEditor:ZoomAndPanControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphEditor:ZoomAndPanControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <!--
                            The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                            
                            A transforms computed from 'ContentScale', 'ContentOffsetX' and 'ContentOffsetY' are assigned
                            to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                            
                            The alignment is set to top-left.  This allows the content offset to be used to place
                            the content in the center of the viewport when the viewport is bigger than the content.
                        -->
                        <ContentPresenter x:Name="PART_Content"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top" />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>